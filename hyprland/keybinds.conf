# See https://wiki.hyprland.org/Configuring/Keywords/
$mainMod = SUPER # Sets "Windows" key as main modifier

# Define variables for applications
# It's good practice to define these at the top
$terminal = kitty
$fileManager = dolphin
# █▀▀ █░░ █ █▀█ █▀▀ █▀█ ▀█▀
# █▄▄ █▄▄ █ █▀▄ ██▄ █▀▄ ░█░
# Clipboard Manager
# Start cliphist on login (add this to your autostart section)
# exec-once = wl-paste --watch cliphist store
bind = $mainMod, H, exec, cliphist list | wofi --show - | cliphist decode | wl-copy && notify-send "Clipboard" "Item selected and copied"
# █▀▄▀█ █▀▀ █▀▀ █▀▀ █▄░█ █▀ █▀█ █▀█ ▀█▀
# █░▀░█ ██▄ ██▄ ██▄ █░▀█ ▄█ █▄█ █▀▄ ░█░
# Screenshots
# Make sure the directory exists: mkdir -p ~/Pictures/Screenshots
bind = $mainMod, P, exec, killall waybar && waybar
# PrtSc: Capture the entire screen output
bind = , Print, exec, grim - | wl-copy && notify-send "Screenshot" "Full screen copied to clipboard"
# Super + PrtSc: Capture the entire screen and save to file
bind = $mainMod, Print, exec, grim ~/Pictures/Screenshots/$(date +'%Y-%m-%d_%H-%M-%S').png && notify-send "Screenshot" "Full screen saved to file"
# Shift + PrtSc: Select a region to capture and copy to clipboard
bind = SHIFT, Print, exec, grim -g "$(slurp)" - | wl-copy && notify-send "Screenshot" "Region copied to clipboard"
# Super + Shift + PrtSc: Select a region to capture and save to file
bind = $mainMod SHIFT, Print, exec, grim -g "$(slurp)" ~/Pictures/Screenshots/$(date +'%Y-%m-%d_%H-%M-%S').png && notify-send "Screenshot" "Region saved to file"

# █▀▀ █▀█ █░█ █▀▀ █▀█ █▀█ █▀▀ █▀▀
# █▄▄ █▀▄ ▀▄▀ ██▄ █▀▄ █▄█ ██▄  shinobi_md
# Applications
bind = $mainMod, Return, exec, $terminal
bind = $mainMod, E, exec, $fileManager
bind = $mainMod, B, exec, brave-browser
bind = $mainMod, C, exec, code # Visual Studio Code
bind = SUPER, SUPER_L, exec, pkill wofi || wofi --show drun # Open/close wofi launcher

# █▀▄▀█ █▀█ █▀█ █▀▀ █▀▀ █▀█ █▄░█ █▀▀ █▀
# █░▀░█ █▄█ █▀▄ ██▄ █▄▄ █▄█ █░▀█ ██▄ ▄█
# Window Management
bind = $mainMod, Q, killactive,
bind = $mainMod, V, togglefloating,
bind = $mainMod, P, pseudo, # dwindle: pseudo-tile the active window
bind = $mainMod, J, togglesplit, # dwindle: change split direction

# Fullscreen Toggles (New)
bind = $mainMod SHIFT, F, fullscreen, 0 # Toggles fullscreen with gaps/borders
bind = $mainMod, F, fullscreen, 1 # Toggles true fullscreen (no gaps/borders)

# Window Cycling (New)
# Use Alt+Tab to cycle through open windows on the current workspace
bind = ALT, Tab, cyclenext,
bind = ALT SHIFT, Tab, cyclenext, prev

# Resize windows with Super + Ctrl + Arrow Keys
bind = $mainMod CTRL, left, resizeactive, -20 0
bind = $mainMod CTRL, right, resizeactive, 20 0
bind = $mainMod CTRL, up, resizeactive, 0 -20
bind = $mainMod CTRL, down, resizeactive, 0 20

# Move (swap) windows with Super + Shift + Arrow Keys
bind = $mainMod SHIFT, left, swapwindow, l
bind = $mainMod SHIFT, right, swapwindow, r
bind = $mainMod SHIFT, up, swapwindow, u
bind = $mainMod SHIFT, down, swapwindow, d

# █▀█ █▀█ █░█ █▀▀ █▀█ █▀▀ █▀
# █▀▀ █▄█ █▄█ ██▄ █▀▄ ██▄ ▄█
# Workspace Control
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace
bind = $mainMod ALT, 1, movetoworkspace, 1
bind = $mainMod ALT, 2, movetoworkspace, 2
bind = $mainMod ALT, 3, movetoworkspace, 3
bind = $mainMod ALT, 4, movetoworkspace, 4
bind = $mainMod ALT, 5, movetoworkspace, 5
bind = $mainMod ALT, 6, movetoworkspace, 6
bind = $mainMod ALT, 7, movetoworkspace, 7
bind = $mainMod ALT, 8, movetoworkspace, 8
bind = $mainMod ALT, 9, movetoworkspace, 9
bind = $mainMod ALT, 0, movetoworkspace, 10

# Scroll through existing workspaces
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Workspace Cycling (New)
# A common paradigm to cycle workspaces sequentially
bind = $mainMod, Tab, workspace, e+1
bind = $mainMod SHIFT, Tab, workspace, e-1

# Special workspace (scratchpad)
# bind = $mainMod, S, togglespecialworkspace, magic
# bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# █▀█ █▀█ █▀ █░█ █▀
# █▀▄ █▄█ ▄█ █▄█ ▄█
# Focus and Movement
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# █▀▀ █▀█ █▀▀ █░█ █
# █▄▄ █▄█ ██▄ ▀▄▀ █
# System Control
bind = $mainMod, M, exit, # Exit Hyprland session

# Laptop multimedia keys
bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%+
bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindel = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel = ,XF86MonBrightnessUp, exec, brightnessctl -e4 -n2 set 5%+
bindel = ,XF86MonBrightnessDown, exec, brightnessctl -e4 -n2 set 5%-

# Media Player Control (requires playerctl)
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPrev, exec, playerctl previous